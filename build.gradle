plugins {
    id "fabric-loom" version "0.2.4-SNAPSHOT"
    id "maven"
    id "signing"
}

group = "com.jamieswhiteshirt"
archivesBaseName = "developer-mode"
version = "1.0.12"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

minecraft {
}

dependencies {
    minecraft "com.mojang:minecraft:1.14.4"
    mappings "net.fabricmc:yarn:1.14.4+build.2"
    modImplementation "net.fabricmc:fabric-loader:0.4.8+build.157"
    modImplementation "net.fabricmc.fabric-api:fabric-resource-loader-v0:0.1.+"

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	afterEvaluate {
		archives(remapJar.output) {
			builtBy remapJar
		}
		archives(remapSourcesJar.output) {
			builtBy remapSourcesJar
		}
	}
}

project.ext.isReleaseVersion = !version.endsWith("-SNAPSHOT")

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: 'https://maven.jamieswhiteshirt.com/libs-release/') {
            authentication(userName: project.properties.mavenUser, password: project.properties.mavenPassword)
        }
        snapshotRepository(url: 'https://maven.jamieswhiteshirt.com/libs-snapshot/') {
            authentication(userName: project.properties.mavenUser, password: project.properties.mavenPassword)
        }

        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
    }
}
